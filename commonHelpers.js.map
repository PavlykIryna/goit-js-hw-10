{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst daysField = document.querySelector('[data-days]');\nconst hoursField = document.querySelector('[data-hours]');\nconst minutesField = document.querySelector('[data-minutes]');\nconst secondsField = document.querySelector('[data-seconds]');\nlet timerInterval;\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      window.alert('Please choose a date in the future');\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nstartButton.addEventListener('click', startTimer);\n\nfunction startTimer() {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n  timerInterval = setInterval(updateTimer, 1000);\n}\n\nfunction updateTimer() {\n  const now = new Date();\n  const timeDifference = userSelectedDate - now;\n  if (timeDifference <= 0) {\n    clearInterval(timerInterval);\n    datetimePicker.disabled = false;\n    daysField.textContent = '00';\n    hoursField.textContent = '00';\n    minutesField.textContent = '00';\n    secondsField.textContent = '00';\n    return;\n  }\n  const time = convertMs(timeDifference);\n  daysField.textContent = addLeadingZero(time.days);\n  hoursField.textContent = addLeadingZero(time.hours);\n  minutesField.textContent = addLeadingZero(time.minutes);\n  secondsField.textContent = addLeadingZero(time.seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["datetimePicker","startButton","daysField","hoursField","minutesField","secondsField","timerInterval","userSelectedDate","options","selectedDates","selectedDate","flatpickr","startTimer","updateTimer","timeDifference","time","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"oGAKA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAC5D,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtB,OAAO,MAAM,oCAAoC,EACjDT,EAAY,SAAW,KAEvBM,EAAmBG,EACnBT,EAAY,SAAW,GAE1B,CACH,EAEAU,EAAUX,EAAgBQ,CAAO,EAEjCP,EAAY,iBAAiB,QAASW,CAAU,EAEhD,SAASA,GAAa,CACpBX,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1BM,EAAgB,YAAYO,EAAa,GAAI,CAC/C,CAEA,SAASA,GAAc,CAErB,MAAMC,EAAiBP,EADX,IAAI,KAEhB,GAAIO,GAAkB,EAAG,CACvB,cAAcR,CAAa,EAC3BN,EAAe,SAAW,GAC1BE,EAAU,YAAc,KACxBC,EAAW,YAAc,KACzBC,EAAa,YAAc,KAC3BC,EAAa,YAAc,KAC3B,MACD,CACD,MAAMU,EAAOC,EAAUF,CAAc,EACrCZ,EAAU,YAAce,EAAeF,EAAK,IAAI,EAChDZ,EAAW,YAAcc,EAAeF,EAAK,KAAK,EAClDX,EAAa,YAAca,EAAeF,EAAK,OAAO,EACtDV,EAAa,YAAcY,EAAeF,EAAK,OAAO,CACxD,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}